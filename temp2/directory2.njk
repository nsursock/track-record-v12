---
layout: base
eleventyComputed:
  meta:
    title: "Member Directory - {{ site.title }}"
    description: "Connect with our community of deep listeners and philosophical thinkers"
eleventyNavigation:
  key: Directory
  order: 4
---

<div class="min-h-screen bg-base-100 mt-20" x-data="memberDirectory()">
  <!-- Hero Section -->
  <section class="relative py-16 sm:py-20">
    <div class="container mx-auto px-4 sm:px-8 max-w-7xl">
      <div class="text-center mb-12">
        <div class="mb-8 flex justify-center">
          <span class="icon-[tabler--users] size-20 text-primary"></span>
        </div>
        <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold text-base-content mb-4">Member Directory</h1>
        <p class="text-xl text-primary mb-6">Connect with our community of deep listeners</p>
        <p class="text-base-content/80 text-lg max-w-3xl mx-auto leading-relaxed">
          Discover fellow philosophers, musicians, and thinkers who share your passion for the deeper meanings in music.
        </p>
      </div>

      <!-- Search and Filter -->
      <div class="max-w-2xl mx-auto mb-8">
        <div class="flex flex-col sm:flex-row gap-4">
          <div class="flex-1">
            <input 
              type="text" 
              placeholder="Search members..." 
              class="input input-bordered w-full bg-base-100 border-primary/20"
              x-model="searchQuery"
              @input="filterMembers()"
            >
          </div>
          <div class="flex gap-2">
            <select class="select select-bordered bg-base-100 border-primary/20" x-model="selectedRole" @change="filterMembers()">
              <option value="">All Roles</option>
              <option value="philosopher">Philosopher</option>
              <option value="musician">Musician</option>
              <option value="critic">Critic</option>
              <option value="listener">Deep Listener</option>
            </select>
            <button class="btn btn-primary" @click="loadMembers()">
              <span class="icon-[tabler--refresh] size-4"></span>
            </button>
          </div>
        </div>
      </div>

      <!-- Member Count -->
      <div class="text-center mb-8">
        <div class="stats shadow bg-base-200">
          <div class="stat">
            <div class="stat-title">Total Members</div>
            <div class="stat-value text-primary" x-text="filteredMembers.length"></div>
            <div class="stat-desc">Growing community</div>
          </div>
          <div class="stat">
            <div class="stat-title">Active This Month</div>
            <div class="stat-value text-secondary" x-text="activeMembers"></div>
            <div class="stat-desc">Recent activity</div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Members Grid -->
  <section class="py-16 sm:py-20 bg-base-200">
    <div class="container mx-auto px-4 sm:px-8 max-w-7xl">
      
      <!-- Loading State -->
      <div x-show="loading" class="text-center py-12">
        <span class="loading loading-spinner loading-lg text-primary"></span>
        <p class="text-base-content/60 mt-4">Loading members...</p>
      </div>

      <!-- Members Grid -->
      <div x-show="!loading" class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        <template x-for="member in filteredMembers" :key="member.id">
          <div class="card bg-base-100 shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-1">
            <figure class="px-6 pt-6">
              <div class="avatar">
                <div class="w-20 h-20 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2">
                  <img :src="member.avatar || '/assets/images/default-avatar.png'" :alt="member.name" class="rounded-full">
                </div>
              </div>
            </figure>
            <div class="card-body p-6 text-center">
              <h3 class="card-title text-lg justify-center" x-text="member.name"></h3>
              <p class="text-primary text-sm font-medium" x-text="member.title"></p>
              <p class="text-base-content/80 text-sm mb-4" x-text="member.bio"></p>
              
              <!-- Member Tags -->
              <div class="flex flex-wrap gap-1 justify-center mb-4">
                <template x-for="tag in member.tags" :key="tag">
                  <span class="badge badge-primary badge-sm" x-text="tag"></span>
                </template>
              </div>

              <!-- Social Links -->
              <div class="flex justify-center gap-2 mb-4">
                <template x-if="member.social.twitter">
                  <a :href="'https://twitter.com/' + member.social.twitter" target="_blank" class="btn btn-ghost btn-xs">
                    <span class="icon-[tabler--brand-twitter] size-4"></span>
                  </a>
                </template>
                <template x-if="member.social.github">
                  <a :href="'https://github.com/' + member.social.github" target="_blank" class="btn btn-ghost btn-xs">
                    <span class="icon-[tabler--brand-github] size-4"></span>
                  </a>
                </template>
                <template x-if="member.social.linkedin">
                  <a :href="'https://linkedin.com/in/' + member.social.linkedin" target="_blank" class="btn btn-ghost btn-xs">
                    <span class="icon-[tabler--brand-linkedin] size-4"></span>
                  </a>
                </template>
              </div>

              <!-- Member Since -->
              <div class="text-xs text-base-content/60">
                <span class="icon-[tabler--calendar] size-3 mr-1"></span>
                Member since <span x-text="formatDate(member.joinedAt)"></span>
              </div>

              <!-- Activity Status -->
              <div class="mt-2">
                <div class="flex items-center justify-center gap-2">
                  <div :class="member.isActive ? 'w-2 h-2 bg-success rounded-full' : 'w-2 h-2 bg-base-300 rounded-full'"></div>
                  <span class="text-xs" :class="member.isActive ? 'text-success' : 'text-base-content/60'" x-text="member.isActive ? 'Active' : 'Offline'"></span>
                </div>
              </div>
            </div>
          </div>
        </template>
      </div>

      <!-- Empty State -->
      <div x-show="!loading && filteredMembers.length === 0" class="text-center py-12">
        <span class="icon-[tabler--user-off] size-16 text-base-content/30 mb-4"></span>
        <h3 class="text-xl font-bold text-base-content mb-2">No members found</h3>
        <p class="text-base-content/60">Try adjusting your search or filters</p>
      </div>

    </div>
  </section>

  <!-- Join Community CTA -->
  <section class="py-16 sm:py-20 bg-base-100" x-show="!$store.auth.user">
    <div class="container mx-auto px-4 sm:px-8 max-w-7xl">
      <div class="text-center">
        <h2 class="text-3xl sm:text-4xl font-bold text-base-content mb-4">Join Our Community</h2>
        <p class="text-base-content/80 text-lg mb-8 max-w-3xl mx-auto">
          Connect with fellow music philosophers and deep listeners. Share insights, discover new perspectives, and grow together.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="/credentials/?mode=signup" class="btn btn-primary btn-lg">
            <span class="icon-[tabler--user-plus] size-5 mr-2"></span>
            Join the Community
          </a>
          <a href="/about/" class="btn btn-outline btn-lg border-primary/30">
            <span class="icon-[tabler--info-circle] size-5 mr-2"></span>
            Learn More
          </a>
        </div>
      </div>
    </div>
  </section>

</div>

<script>
function memberDirectory() {
  return {
    loading: true,
    searchQuery: '',
    selectedRole: '',
    members: [],
    filteredMembers: [],
    activeMembers: 0,

    init() {
      this.loadMembers();
    },

    async loadMembers() {
      this.loading = true;
      
      try {
        // In a real app, this would fetch from your API/database
        // For demo purposes, using mock data
        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call
        
        this.members = [
          {
            id: 1,
            name: "Nicolas Sursock",
            title: "Philosophical Music Critic",
            bio: "From chaos to clarity, exploring the deeper meanings in music.",
            avatar: "/assets/images/profile.jpeg",
            tags: ["Philosophy", "Critic", "Writer"],
            social: {
              twitter: "nsursock",
              github: "nsursock",
              linkedin: "nsursock"
            },
            joinedAt: "2024-01-15",
            isActive: true,
            role: "philosopher"
          },
          {
            id: 2,
            name: "Elena Rodriguez",
            title: "Jazz Philosopher",
            bio: "Exploring improvisation as a metaphor for existential freedom.",
            avatar: "https://i.pravatar.cc/150?img=1",
            tags: ["Jazz", "Philosophy", "Improvisation"],
            social: {
              twitter: "elenajazzphil",
              linkedin: "elena-rodriguez-music"
            },
            joinedAt: "2024-02-03",
            isActive: true,
            role: "philosopher"
          },
          {
            id: 3,
            name: "Marcus Chen",
            title: "Electronic Music Theorist",
            bio: "Bridging the gap between technology and human expression.",
            avatar: "https://i.pravatar.cc/150?img=2",
            tags: ["Electronic", "Technology", "Theory"],
            social: {
              github: "marcuschen",
              twitter: "marcuselectronic"
            },
            joinedAt: "2024-01-28",
            isActive: false,
            role: "musician"
          },
          {
            id: 4,
            name: "Sarah Thompson",
            title: "Classical Music Analyst",
            bio: "Finding revolutionary spirit in traditional compositions.",
            avatar: "https://i.pravatar.cc/150?img=3",
            tags: ["Classical", "Analysis", "History"],
            social: {
              linkedin: "sarah-thompson-music",
              twitter: "sarahclassical"
            },
            joinedAt: "2024-02-10",
            isActive: true,
            role: "critic"
          },
          {
            id: 5,
            name: "David Kim",
            title: "Deep Listener",
            bio: "Discovering wisdom in every note, rhythm, and silence.",
            avatar: "https://i.pravatar.cc/150?img=4",
            tags: ["Deep Listening", "Meditation", "Mindfulness"],
            social: {
              twitter: "daviddeeplistens"
            },
            joinedAt: "2024-02-15",
            isActive: true,
            role: "listener"
          },
          {
            id: 6,
            name: "Isabella Martinez",
            title: "World Music Explorer",
            bio: "Connecting global sounds with universal human experiences.",
            avatar: "https://i.pravatar.cc/150?img=5",
            tags: ["World Music", "Culture", "Anthropology"],
            social: {
              instagram: "isabellaworld",
              linkedin: "isabella-martinez-music"
            },
            joinedAt: "2024-01-20",
            isActive: false,
            role: "musician"
          }
        ];

        this.activeMembers = this.members.filter(m => m.isActive).length;
        this.filteredMembers = [...this.members];
        
      } catch (error) {
        console.error('Failed to load members:', error);
      } finally {
        this.loading = false;
      }
    },

    filterMembers() {
      this.filteredMembers = this.members.filter(member => {
        const matchesSearch = !this.searchQuery || 
          member.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
          member.title.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
          member.bio.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
          member.tags.some(tag => tag.toLowerCase().includes(this.searchQuery.toLowerCase()));
        
        const matchesRole = !this.selectedRole || member.role === this.selectedRole;
        
        return matchesSearch && matchesRole;
      });
    },

    formatDate(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', { 
        year: 'numeric', 
        month: 'short' 
      });
    }
  }
}
</script> 