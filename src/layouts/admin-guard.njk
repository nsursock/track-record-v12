---
layout: base
---

<!-- Admin Guard Wrapper -->
<div x-data="adminGuard()" x-init="init()" class="mt-24 md:mt-6 mb-10">
  <!-- Loading State -->
  <div x-show="loading" class="min-h-screen bg-base-100 flex items-center justify-center">
    <div class="text-center">
      <div class="loading loading-spinner loading-lg text-primary mb-4"></div>
      <p class="text-base-content/70">Verifying admin access...</p>
    </div>
  </div>

  <!-- Not Authenticated State -->
  <div x-show="!loading && !$store.auth.isAuthenticated" class="min-h-screen bg-base-100 flex items-center justify-center p-4">
    <div class="max-w-2xl mx-auto text-center">
      <!-- Animated Lock Icon -->
      <div class="relative mb-8">
        <div class="w-32 h-32 mx-auto bg-gradient-to-br from-error/10 to-warning/10 rounded-full flex items-center justify-center relative overflow-hidden">
          <!-- Background Pattern -->
          <div class="absolute inset-0 bg-grid-pattern opacity-20"></div>
          
          <!-- Main Lock Icon -->
          <div class="relative z-10 w-16 h-16 bg-error/20 rounded-full flex items-center justify-center">
            <span class="icon-[tabler--lock] w-8 h-8 text-error"></span>
          </div>
          
          <!-- Floating Elements -->
          <div class="absolute top-4 right-4 w-3 h-3 bg-warning/30 rounded-full animate-pulse"></div>
          <div class="absolute bottom-6 left-6 w-2 h-2 bg-error/40 rounded-full animate-bounce"></div>
          <div class="absolute top-8 left-4 w-1.5 h-1.5 bg-primary/30 rounded-full animate-ping"></div>
        </div>
      </div>

      <!-- Error Code Style -->
      <div class="mb-6">
        <h1 class="text-6xl sm:text-8xl font-bold text-error/20 mb-2 tracking-wider">
          401
        </h1>
        <div class="h-1 w-24 bg-gradient-to-r from-error to-warning mx-auto rounded-full mb-4"></div>
      </div>

      <!-- Content -->
      <div class="space-y-4 mb-8">
        <h2 class="text-2xl sm:text-3xl font-bold text-base-content">
          Admin Access Required
        </h2>
        <p class="text-base-content/70 text-lg max-w-md mx-auto leading-relaxed">
          You need to be signed in as an administrator to access this page.
        </p>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <button 
          @click="redirectToAuth()" 
          class="btn btn-primary btn-lg group"
        >
          <span class="icon-[tabler--login] w-5 h-5 group-hover:scale-110 transition-transform"></span>
          Sign In as Admin
        </button>
        
        <button 
          @click="redirectToHome()" 
          class="btn btn-secondary btn-lg"
        >
          <span class="icon-[tabler--home] w-5 h-5"></span>
          Return Home
        </button>
      </div>
    </div>
  </div>

  <!-- Not Admin State -->
  <div x-show="!loading && $store.auth.isAuthenticated && !isAdmin" class="min-h-screen bg-base-100 flex items-center justify-center p-4">
    <div class="max-w-2xl mx-auto text-center">
      <!-- Animated Shield Icon -->
      <div class="relative mb-8">
        <div class="w-32 h-32 mx-auto bg-gradient-to-br from-warning/10 to-error/10 rounded-full flex items-center justify-center relative overflow-hidden">
          <!-- Background Pattern -->
          <div class="absolute inset-0 bg-grid-pattern opacity-20"></div>
          
          <!-- Main Shield Icon -->
          <div class="relative z-10 w-16 h-16 bg-warning/20 rounded-full flex items-center justify-center">
            <span class="icon-[tabler--shield-x] w-8 h-8 text-warning"></span>
          </div>
          
          <!-- Floating Elements -->
          <div class="absolute top-4 right-4 w-3 h-3 bg-error/30 rounded-full animate-pulse"></div>
          <div class="absolute bottom-6 left-6 w-2 h-2 bg-warning/40 rounded-full animate-bounce"></div>
          <div class="absolute top-8 left-4 w-1.5 h-1.5 bg-primary/30 rounded-full animate-ping"></div>
        </div>
      </div>

      <!-- Error Code Style -->
      <div class="mb-6">
        <h1 class="text-6xl sm:text-8xl font-bold text-warning/20 mb-2 tracking-wider">
          403
        </h1>
        <div class="h-1 w-24 bg-gradient-to-r from-warning to-error mx-auto rounded-full mb-4"></div>
      </div>

      <!-- Content -->
      <div class="space-y-4 mb-8">
        <h2 class="text-2xl sm:text-3xl font-bold text-base-content">
          Access Denied
        </h2>
        <p class="text-base-content/70 text-lg max-w-md mx-auto leading-relaxed">
          You don't have permission to access this administrative area.
        </p>
        <div class="text-sm text-base-content/50 mt-2">
          Current user: <span x-text="$store.auth.user?.email || 'Unknown'"></span>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <button 
          @click="redirectToHome()" 
          class="btn btn-primary btn-lg group"
        >
          <span class="icon-[tabler--home] w-5 h-5 group-hover:scale-110 transition-transform"></span>
          Return Home
        </button>
        
        <button 
          @click="signOut()" 
          class="btn btn-secondary btn-lg"
        >
          <span class="icon-[tabler--logout] w-5 h-5"></span>
          Sign Out
        </button>
      </div>
    </div>
  </div>

  <!-- Admin Content -->
  <div x-show="!loading && $store.auth.isAuthenticated && isAdmin">
    {{ content | safe }}
  </div>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('adminGuard', () => ({
      loading: true,
      isAdmin: false,
      
      async init() {
        console.log('🛡️ Admin Guard initialized');

        // Initialize auth store if not already done
        if (!this.$store.auth.session && !this.$store.auth.loading) {
          await this.$store.auth.init();
        }

        // Wait for auth to be ready
        await this.waitForAuth();
        
        // Check admin status
        this.checkAdmin();
        
        this.loading = false;

        // Watch for auth changes
        this.$watch('$store.auth.isAuthenticated', () => {
          this.checkAdmin();
        });

        this.$watch('$store.auth.user', () => {
          this.checkAdmin();
        });
      },

      async waitForAuth() {
        return new Promise((resolve) => {
          const checkAuth = () => {
            if (!this.$store.auth.loading) {
              resolve();
            } else {
              setTimeout(checkAuth, 100);
            }
          };
          checkAuth();
        });
      },

      checkAdmin() {
        const user = this.$store.auth.user;
        this.isAdmin = user && user.email === 'nicolas.sursock@gmail.com';
        
        console.log('🔐 Admin check:', {
          isAuthenticated: this.$store.auth.isAuthenticated,
          userEmail: user?.email,
          isAdmin: this.isAdmin
        });
      },

      redirectToAuth() {
        console.log('🔄 Redirecting to login page...');
        const returnUrl = window.location.pathname + window.location.search;
        localStorage.setItem('authReturnUrl', returnUrl);
        window.location.href = '/credentials/?mode=login';
      },

      redirectToHome() {
        console.log('🔄 Redirecting to home page...');
        window.location.href = '/';
      },

      signOut() {
        console.log('🚪 Signing out...');
        this.$store.auth.signOut();
        setTimeout(() => {
          window.location.href = '/';
        }, 1000);
      }
    }));
  });
</script> 